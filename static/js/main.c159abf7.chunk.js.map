{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","updateMovies","useState","currMovie","setCurrMovie","inputText","setInputText","isError","setIsError","isLoading","setIsLoading","onSubmit","event","query","preventDefault","undefined","fetch","then","res","json","catch","Response","Error","Object","prototype","hasOwnProperty","call","normalizedMovie","Title","Plot","Poster","imdbID","normalizeMovie","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","some","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c159abf7.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  updateMovies: CallableFunction;\n  movies: Movie[],\n};\n\nexport const FindMovie: React.FC<Props> = ({ updateMovies, movies }) => {\n  const [currMovie, setCurrMovie] = useState<Movie | undefined>();\n  const [inputText, setInputText] = useState('');\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const normalizeMovie = (movie: MovieData) => {\n    const normalizedMovie: Movie = {\n      title: movie.Title,\n      description: movie.Plot,\n      imgUrl: movie.Poster === 'N/A'\n        ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n        : movie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n      imdbId: movie.imdbID,\n    };\n\n    setCurrMovie(normalizedMovie);\n  };\n\n  const submitHandle = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setCurrMovie(undefined);\n    setIsLoading(true);\n\n    getMovie(inputText)\n      .then(movie => {\n        if (Object.prototype.hasOwnProperty.call(movie, 'Error')) {\n          setIsError(true);\n        } else {\n          normalizeMovie(movie as MovieData);\n        }\n      })\n      .catch(() => (setIsLoading(false)))\n      .finally(() => (setIsLoading(false)));\n  };\n\n  const handleAddBtn = () => {\n    if (!movies.some(movie => movie.imdbId === currMovie?.imdbId)) {\n      updateMovies([...movies, currMovie]);\n    }\n\n    setCurrMovie(undefined);\n    setInputText('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitHandle}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={inputText}\n              onChange={(event) => {\n                setInputText(event.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!inputText}\n            >\n              Find a movie\n            </button>\n          </div>\n          {currMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddBtn}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {currMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={currMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst MOVIE_URL = 'https://www.omdbapi.com/?apikey=fcd26db7';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${MOVIE_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie updateMovies={setMovies} movies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}